// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShop.Infrastructure.EfCore;

#nullable disable

namespace OnlineShop.Infrastructure.EfCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250629133335_initial-Schema")]
    partial class initialSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineShop.Domain.Entities.Product.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<decimal>("Cover_Price1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Cover_Price2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Discount_Price1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Discount_Price2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Double")
                        .HasColumnType("bit");

                    b.Property<string>("Garanty_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Garanty_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Max_Sell")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Save_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Sell_State")
                        .HasColumnType("bit");

                    b.Property<bool>("Send_Fast")
                        .HasColumnType("bit");

                    b.Property<string>("Seo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Single")
                        .HasColumnType("bit");

                    b.Property<bool>("Special_Offer")
                        .HasColumnType("bit");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ModelId");

                    b.ToTable("T_Product");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Product.ProductCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("T_ProductCategory");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Product.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("T_ProductImage");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Product.ProductModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("T_ProductModel");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.User.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("T_Role");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.User.SpecialMember", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Accounting_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Manager_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mellicode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile_Whatsup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other_Brands")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<string>("Postal_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Property_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sell_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seller_Count")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store_Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Working_Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PermissionId");

                    b.ToTable("T_SpecialMember");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Product.Product", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.Product.ProductCategory", "ProductsCategory")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShop.Domain.Entities.Product.ProductModel", "ProductsModel")
                        .WithMany("products")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductsCategory");

                    b.Navigation("ProductsModel");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Product.ProductImage", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.Product.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.User.SpecialMember", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.User.Role", "Permission")
                        .WithMany("SpecialMembers")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Product.Product", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Product.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Product.ProductModel", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.User.Role", b =>
                {
                    b.Navigation("SpecialMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
